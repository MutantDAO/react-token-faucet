{"version":3,"sources":["components/Message.js","components/Faucet.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Message","balance","style","marginBottom","fontWeight","fontSize","tokenAddress","Faucet","props","useState","setBalance","showBalance","setShowBalance","getBalance","a","window","ethereum","request","method","account","provider","ethers","providers","Web3Provider","contract","Contract","tokenContract","abi","balanceOf","console","log","toString","utils","formatEther","signer","getSigner","exp","BigNumber","from","pow","amount","mul","faucet","useEffect","maxWidth","Card","background","padding","Body","Title","Subtitle","margin","lineHeight","className","marginTop","Button","onClick","variant","Header","Navbar","bg","fixed","Container","Brand","href","alt","src","width","height","App","Token","FCTToken","Row","Col","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ov5BAUeA,EARC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACC,sBAAKC,MAAO,CAACC,aAAc,OAAQC,WAAW,IAAKC,SAAU,UAA7D,iCACeJ,EADf,cCGIK,G,MAAe,8CAiENC,EA7DA,SAACC,GAEf,MAA8BC,qBAA9B,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAAsCD,oBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAHyB,SASVC,IATU,2EASzB,sCAAAC,EAAA,yDACgC,qBAApBC,OAAOC,SADnB,iCAE0BD,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,wBAF5D,0CAESC,EAFT,KAGQC,EAAW,IAAIC,IAAOC,UAAUC,aAAaR,OAAOC,UACpDQ,EAAW,IAAIH,IAAOI,SAASnB,EAAcE,EAAMkB,cAAcC,IAAKP,GAJ9E,UAKwBI,EAASI,UAAUT,GAL3C,QAKQlB,EALR,OAME4B,QAAQC,IAAI,YAAa7B,EAAQ8B,YACjCrB,EAAWW,IAAOW,MAAMC,YAAYhC,EAAQ8B,aAC5CnB,GAAe,GARjB,6CATyB,kEAqBzB,sCAAAE,EAAA,yDACgC,qBAApBC,OAAOC,SADnB,iCAEwBD,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,wBAF1D,OAEQC,EAFR,OAGQC,EAAW,IAAIC,IAAOC,UAAUC,aAAaR,OAAOC,UACpDkB,EAASd,EAASe,YAClBX,EAAW,IAAIH,IAAOI,SAASnB,EAAcE,EAAMkB,cAAcC,IAAKO,GAEtEE,EAAMf,IAAOgB,UAAUC,KAAK,MAAMC,IAAI,IACtCC,EAASnB,IAAOgB,UAAUC,KAAK,MAAMG,IAAIL,GAE/CZ,EAASkB,OAAOvB,EAAQ,GAAIqB,GAV9B,6CArByB,sBAkCzB,OA7BAG,qBAAU,WACT9B,OA6BA,sBAAKX,MAAO,CAAC0C,SAAS,SAAtB,UACC,cAACC,EAAA,EAAD,CAAM3C,MAAO,CAAC4C,WAAY,sBAAuBC,QAAS,OAAQ5C,aAAc,QAAhF,SACC,eAAC0C,EAAA,EAAKG,KAAN,WACC,eAACH,EAAA,EAAKI,MAAN,CAAY/C,MAAO,CAACE,WAAY,IAAIC,SAAS,SAA7C,mBAA6D,0CAA7D,oBACA,eAACwC,EAAA,EAAKK,SAAN,CAAehD,MAAO,CAACiD,OAAQ,WAAYC,WAAY,KAAvD,qHAAqK,sCAArK,0CACA,sBAAKC,UAAU,eAAf,UACC,qBAAKnD,MAAO,CAACoD,UAAU,QAAvB,SACG3C,EAAc,cAAC,EAAD,CAASV,QAASA,IAAa,OAEhD,cAACsD,EAAA,EAAD,CAAQC,QAAS3C,EAAY4C,QAAQ,qBAArC,yCAIH,cAACZ,EAAA,EAAD,CAAM3C,MAAO,CAAC4C,WAAY,sBAAuBC,QAAS,QAA1D,SACC,eAACF,EAAA,EAAKG,KAAN,WACC,eAACH,EAAA,EAAKI,MAAN,CAAY/C,MAAO,CAACE,WAAY,IAAIC,SAAS,SAA7C,0BAAoE,0CAApE,YACA,eAACwC,EAAA,EAAKK,SAAN,CAAehD,MAAO,CAACiD,OAAQ,WAAYC,WAAY,KAAvD,yCAAyF,sCAAzF,uBAAyH,gDAAzH,OACA,qBAAKC,UAAU,eAAenD,MAAO,CAACC,aAAa,QAAnD,SACC,cAACoD,EAAA,EAAD,CAAQC,QArDY,2CAqDKC,QAAS,qBAAlC,qD,QC1CSC,G,MAnBA,WACd,OACC,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOH,QAAQ,OAAOI,MAAO,MAAOR,UAAU,WAAzD,SACC,cAACS,EAAA,EAAD,UACC,eAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,UACC,qBACCC,IAAI,GACJC,IAAI,uBACJC,MAAM,KACNC,OAAO,KACPf,UAAU,6BACR,IAPJ,mDCuBWgB,MArBf,WAEE,IAAMC,EAAQC,EAEd,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACS,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,CAAKnB,UAAU,4BAAf,SACE,cAACoB,EAAA,EAAD,CAAKvE,MAAO,CAACwE,QAAS,QAASrB,UAAU,4BAAzC,SACE,cAAC,EAAD,CAAS3B,cAAe4C,cCPrBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f75bf022.chunk.js","sourcesContent":["import Alert from 'react-bootstrap/Alert'\n\nconst Message = ({ balance }) => {\n\treturn (\n\t\t<div style={{marginBottom: \"24px\", fontWeight:700, fontSize: \"1.4rem\"}}>\n\t\t\tBalance : {`${balance} $FISH`}\n\t\t</div>\n\t)\n}\n\nexport default Message","import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Message from './Message';\nimport './Faucet.css';\n\nconst tokenAddress = \"0xbCc10bC2a24b07b598D7794FecFDb42B48a5c435\"\n\n\n// const Faucet = (props) => {\nconst Faucet = (props) => {\n\t\n\tconst [balance, setBalance] = useState();\n\tconst [showBalance, setShowBalance] = useState(false);\n\t\n\tuseEffect(() => {\n\t\tgetBalance();\n\t});\n\t\n\tasync function getBalance() {\n\t\tif (typeof window.ethereum !== 'undefined') {\n\t\t\tconst [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, provider)\n\t\t\tconst balance = await contract.balanceOf(account);\n\t\t\tconsole.log(\"Balance: \", balance.toString());\n\t\t\tsetBalance(ethers.utils.formatEther(balance.toString()));\n\t\t\tsetShowBalance(true);\n\t\t}\n\t}\n\t\n\tasync function faucet() {\n\t\tif (typeof window.ethereum !== 'undefined') {\n\t\t\tconst account = await window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, signer);\n\t\t\t\n\t\t\tconst exp = ethers.BigNumber.from(\"10\").pow(18);\n\t\t\tconst amount = ethers.BigNumber.from(\"50\").mul(exp);\n\t\t\t// contract.faucet(account[0], 1000000000000000000);//100 tokens\n\t\t\tcontract.faucet(account[0], amount);//100 tokens\n\t\t}\n\t}\n\treturn (\n\t\t<div style={{maxWidth:'600px'}}>\n\t\t\t<Card style={{background: \"rgb(209, 213, 219);\", padding: '30px', marginBottom: \"20px\"}}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title style={{fontWeight: 600,fontSize:'1.5em'}}>Check <b>(Testnet)</b> $FISH balance</Card.Title>\n\t\t\t\t\t<Card.Subtitle style={{margin: \"30px 0px\", lineHeight: 1.5}}>Sup Mutant Dev!  Thanks for taking time to develop for the Mutant Community.  Click below to check your <b>$FISH</b> for development on Ropsten Testnet.</Card.Subtitle>\n\t\t\t\t\t<div className=\"d-grid gap-2\">\n\t\t\t\t\t\t<div style={{marginTop:\"15px\"}}>\n\t\t\t\t\t\t\t{ showBalance ? <Message balance={balance}/> : null }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button onClick={getBalance} variant=\"warning faucet-btn\">Check $FISH Balance</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t\t<Card style={{background: \"rgb(209, 213, 219);\", padding: '30px'}}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title style={{fontWeight: 600,fontSize:'1.5em'}}>Make it rain <b>(Testnet)</b> $FISH</Card.Title>\n\t\t\t\t\t<Card.Subtitle style={{margin: \"30px 0px\", lineHeight: 1.5}}>Click below to receive your <b>$FISH</b> for development on <b>Ropsten Testnet</b>.</Card.Subtitle>\n\t\t\t\t\t<div className=\"d-grid gap-2\" style={{marginBottom:\"15px\"}}>\n\t\t\t\t\t\t<Button onClick={faucet} variant={\"primary faucet-btn\"}>Make it ðŸ’¦  $FISH!</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default Faucet","import { Container, Navbar} from 'react-bootstrap';\nimport HeaderStyles from './Header.css';\n\nconst Header = () => {\n\treturn (\n\t\t<Navbar bg=\"dark\" variant=\"dark\" fixed={\"top\"} className=\"mcHeader\">\n\t\t\t<Container>\n\t\t\t\t<Navbar.Brand href=\"#home\">\n\t\t\t\t\t<img\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tsrc=\"./faucet/mc-logo.png\"\n\t\t\t\t\t\twidth=\"30\"\n\t\t\t\t\t\theight=\"30\"\n\t\t\t\t\t\tclassName=\"d-inline-block align-top\"\n\t\t\t\t\t/>{' '}\n\t\t\t\t\tMutantCats: Ropsten Testnet FISH Faucet\n\t\t\t\t</Navbar.Brand>\n\t\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Header;","import './App.css';\nimport FCTToken from './artifacts/contracts/FISHToken.sol/FISHToken.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport Faucet from './components/Faucet.js';\nimport TokenSend from './components/TokenSend.js';\nimport Header from \"./components/Header\";\n\nfunction App() {\n  \n  const Token = FCTToken;\n  \n  return (\n    <div className=\"App\">\n      <Header/>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col style={{display: 'flex'}} className=\"justify-content-md-center\">\n            <Faucet  tokenContract={Token}/>\n          </Col>\n          {/*<Col>*/}\n          {/*  <TokenSend tokenContract={Token}/>*/}\n          {/*</Col>*/}\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}